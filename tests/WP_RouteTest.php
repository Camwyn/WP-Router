<?php
require_once 'PHPUnit/Framework.php';
require_once dirname( __FILE__ ) . '/../WP_Router_Utility.class.php';
require_once dirname( __FILE__ ) . '/../WP_Route.class.php';
require_once '/usr/lib/mockpress/mockpress.php';

/**
 * Test class for WP_Route.
 * Generated by PHPUnit on 2011-05-18 at 20:53:07.
 */
class WP_RouteTest extends PHPUnit_Framework_TestCase {
	/**
	 * @var WP_Route
	 */
	protected $route = array();
	protected $args = array(
		'path' => '^test/(.*?)/$',
		'query_vars' => array(
			'test' => 1,
			'monkey' => 'green',
		),
		'title' => 'title',
		'title_callback' => 'title_callback',
		'title_arguments' => array('test'),
		'page_callback' => 'page_callback',
		'page_arguments' => array('test'),
		'access_callback' => TRUE,
		'access_arguments' => array('test'),
		'template' => 'file.php',
	);

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp( ) {
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown( ) {
	}

	private function get_route($args) {
		$route = $this->getMock('WP_Route', array('preg_index'), array('test', $args));
		$route->expects($this->any())
					->method('preg_index')
					->will($this->returnCallback(array($this, 'mock_preg_index')));
		return $route;
	}

	public function mock_preg_index( $int ) {
		return '$matches['.$int.']';
	}

	/**
	 * @todo Implement testGet().
	 */
	public function testGet( ) {
		$args = $this->args;
		$args['random'] = '4';
		$route = $this->get_route($args);
		foreach ( $args as $key => $arg ) {
			$this->assertEquals($route->get($key), $arg);
		}
	}

	/**
	 * @todo Implement testSet().
	 */
	public function testSet( ) {
		$route = $this->get_route($this->args);
		
		$route->set('id', 'newvalue');
		$this->assertEquals($route->get('id'), 'newvalue');

		$route->set('random', 'purple');
		$this->assertEquals($route->get('random'), 'purple');
	}

	/**
	 * @dataProvider setErrorDataProvider
	 * @expectedException Exception
	 */
	public function testSet2( $property, $value ) {
		$route = $this->get_route($this->args);
		$route->set($property, $value);
	}

	public function setErrorDataProvider() {
		return array(
			array('access_arguments', 'green'),
			array('page_callback', ''),
			array('title_arguments', 4),
		);
	}

	/**
	 * @todo Implement testExecute().
	 */
	public function testExecute( ) {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testRewrite_rules().
	 */
	public function testRewrite_rules( ) {
		$route = $this->get_route($this->args);
		$this->assertEquals($route->rewrite_rules(), array($this->args['path'] => 'index.php?test=$matches[1]&monkey=green&WP_Route=test'));
	}
}

?>
